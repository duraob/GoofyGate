{"ast":null,"code":"import _toConsumableArray from\"/home/jet/Documents/buildspace/eth-proj/GoofyGate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/jet/Documents/buildspace/eth-proj/GoofyGate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jet/Documents/buildspace/eth-proj/GoofyGate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/jet/Documents/buildspace/eth-proj/GoofyGate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{ethers,providers}from'ethers';import'./App.css';import abi from'./utils/GoofGate.json';export default function App(){// STATE\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),currentAccount=_useState2[0],setCurrentAccount=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),goofers=_useState4[0],setGoofers=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),allGoofs=_useState6[0],setAllGoofs=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),inputValue=_useState8[0],setInputValue=_useState8[1];// CONSTANT\n// Address of our contract\nvar contractAddress='0xE853E18c0D01f8c1c78C6e2590F58207D27869F7';// ABI json\nvar contractABI=abi.abi;// Lets see if user connected their MetaMask Wallet\nvar checkWalletConnection=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _window,ethereum,accounts,account;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_window=window,ethereum=_window.ethereum;if(ethereum){_context.next=7;break;}console.log('Metamask is needed to continue');return _context.abrupt(\"return\");case 7:console.log('Eth obj available: ',ethereum);case 8:_context.next=10;return ethereum.request({method:'eth_accounts'});case 10:accounts=_context.sent;if(accounts.length!==0){account=accounts[0];console.log('Auth account available: ',account);// Set the curretn account\nsetCurrentAccount(account);getAllGoofs();}else{console.log('No authorized account avaiable.');}_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.log('Error in wallet connection: ',_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function checkWalletConnection(){return _ref.apply(this,arguments);};}();// Connect wallet method\nvar connectWallet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _window2,ethereum,accounts;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_window2=window,ethereum=_window2.ethereum;if(ethereum){_context2.next=5;break;}alert('Please download MetaMask.');return _context2.abrupt(\"return\");case 5:_context2.next=7;return ethereum.request({method:'eth_requestAccounts'});case 7:accounts=_context2.sent;console.log('Connected to account: ',accounts[0]);setCurrentAccount(accounts[0]);_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](0);console.log('Could not connect to any account.');case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,12]]);}));return function connectWallet(){return _ref2.apply(this,arguments);};}();var getAllGoofs=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _window3,ethereum,provider,signer,goofGateContract,count,goofs,cleanGoofs;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_window3=window,ethereum=_window3.ethereum;if(!ethereum){_context3.next=19;break;}provider=new ethers.providers.Web3Provider(ethereum);signer=provider.getSigner();goofGateContract=new ethers.Contract(contractAddress,contractABI,signer);// get current contract info\n// total goofers\n_context3.next=8;return goofGateContract.getTotalGoofs();case 8:count=_context3.sent;console.log('The total amount of goofs are...',count.toNumber());setGoofers(count.toNumber());// get goofs\n_context3.next=13;return goofGateContract.getAllGoofs();case 13:goofs=_context3.sent;// clean data\ncleanGoofs=[];goofs.forEach(function(goof){cleanGoofs.push({address:goof.goofer,timestamp:new Date(goof.timestamp*1000),message:goof.message});});setAllGoofs(cleanGoofs);_context3.next=20;break;case 19:console.log('No ethereum obj available.');case 20:_context3.next=25;break;case 22:_context3.prev=22;_context3.t0=_context3[\"catch\"](0);console.log('Error getting all goofs: ',_context3.t0);case 25:case\"end\":return _context3.stop();}}},_callee3,null,[[0,22]]);}));return function getAllGoofs(){return _ref3.apply(this,arguments);};}();var goof=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _window4,ethereum,provider,signer,goofGateContract,goofTxn,count;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(inputValue.length===0)){_context4.next=3;break;}console.log('No link or msg given!');return _context4.abrupt(\"return\");case 3:console.log('Msg or link:',inputValue);_context4.prev=4;_window4=window,ethereum=_window4.ethereum;if(!ethereum){_context4.next=24;break;}provider=new ethers.providers.Web3Provider(ethereum);signer=provider.getSigner();goofGateContract=new ethers.Contract(contractAddress,contractABI,signer);// WRITING FUNCTION TO BLOCKCHAIN\n_context4.next=12;return goofGateContract.goof(inputValue,{gasLimit:300000});case 12:goofTxn=_context4.sent;console.log('Mining...',goofTxn.hash);_context4.next=16;return goofTxn.wait();case 16:console.log('Mined --',goofTxn.hash);_context4.next=19;return goofGateContract.getTotalGoofs();case 19:count=_context4.sent;console.log('The total amount of goofs are...',count.toNumber());setGoofers(count.toNumber());_context4.next=25;break;case 24:console.log('No ethereum object available.');case 25:_context4.next=30;break;case 27:_context4.prev=27;_context4.t0=_context4[\"catch\"](4);console.log('Could not goof: ',_context4.t0);case 30:case\"end\":return _context4.stop();}}},_callee4,null,[[4,27]]);}));return function goof(){return _ref4.apply(this,arguments);};}();useEffect(function(){var goofGateContract;var onNewGoof=function onNewGoof(from,timestamp,message){console.log('NewGoof',from,timestamp,message);setAllGoofs(function(prevState){return[].concat(_toConsumableArray(prevState),[{address:from,timestamp:new Date(timestamp*1000),message:message}]);});};if(window.ethereum){var provider=new ethers.providers.Web3Provider(window.ethereum);var signer=provider.getSigner();goofGateContract=new ethers.Contract(contractAddress,contractABI,signer);goofGateContract.on('NewGoof',onNewGoof);}return function(){if(goofGateContract){goofGateContract.off('NewGoof',onNewGoof);}};},[]);var renderNotConnected=function renderNotConnected(){return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"button\",{className:\"goofButton connect-wallet-button\",onClick:connectWallet},\"Connect MetaMask\"));};var renderConnected=function renderConnected(){return/*#__PURE__*/React.createElement(\"div\",{className:\"connected-container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Give a goofy msg, or gif link!\",value:inputValue,onChange:onInputChange}),/*#__PURE__*/React.createElement(\"button\",{className:\"goofButton submit-button\",onClick:goof},\"GOOF OFF\"),/*#__PURE__*/React.createElement(\"h3\",{className:\"subtext\"},\"Goofy Goobers: \",goofers),allGoofs.map(function(goof,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,style:{backgroundColor:\"OldLace\",marginTop:\"16px\",padding:\"8px\"}},/*#__PURE__*/React.createElement(\"div\",null,\"Address: \",goof.address),/*#__PURE__*/React.createElement(\"div\",null,\"Time: \",goof.timestamp.toString()),/*#__PURE__*/React.createElement(\"div\",null,\"Message: \",goof.message));}));};// Get Input Change\nvar onInputChange=function onInputChange(event){var value=event.target.value;setInputValue(value);};// Run our function when the page loads\nuseEffect(function(){checkWalletConnection();},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"mainContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:currentAccount?'authed-container':'container'},/*#__PURE__*/React.createElement(\"h2\",{className:\"header\"},/*#__PURE__*/React.createElement(\"span\",{role:\"img\"},\"\\uD83D\\uDE35\\u200D\\uD83D\\uDCAB\\uD83E\\uDD0C\"),\" Hey you GOOF!\"),/*#__PURE__*/React.createElement(\"p\",{className:\"bio\"},\"I am jetgoof and own a goofy little puppy, isn't that cool? Connect your Ethereum wallet and show me how goofy you are!\"),!currentAccount&&renderNotConnected(),currentAccount&&renderConnected()));}","map":{"version":3,"sources":["/home/jet/Documents/buildspace/eth-proj/GoofyGate/src/App.js"],"names":["React","useEffect","useState","ethers","providers","abi","App","currentAccount","setCurrentAccount","goofers","setGoofers","allGoofs","setAllGoofs","inputValue","setInputValue","contractAddress","contractABI","checkWalletConnection","window","ethereum","console","log","request","method","accounts","length","account","getAllGoofs","connectWallet","alert","provider","Web3Provider","signer","getSigner","goofGateContract","Contract","getTotalGoofs","count","toNumber","goofs","cleanGoofs","forEach","goof","push","address","goofer","timestamp","Date","message","gasLimit","goofTxn","hash","wait","onNewGoof","from","prevState","on","off","renderNotConnected","renderConnected","onInputChange","map","index","backgroundColor","marginTop","padding","toString","event","value","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { ethers, providers } from 'ethers';\nimport './App.css';\nimport abi from './utils/GoofGate.json';\n\nexport default function App() {\n  // STATE\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [goofers, setGoofers] = useState(0);\n  const [allGoofs, setAllGoofs] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  // CONSTANT\n  // Address of our contract\n  const contractAddress = '0xE853E18c0D01f8c1c78C6e2590F58207D27869F7';\n  // ABI json\n  const contractABI = abi.abi;\n\n  // Lets see if user connected their MetaMask Wallet\n  const checkWalletConnection = async () => {\n    try {\n      const { ethereum } = window;\n\n      if(!ethereum) {\n        console.log('Metamask is needed to continue');\n        return;\n      } else {\n        console.log('Eth obj available: ', ethereum);\n      }\n  \n      // See if we are authorized to access the user's wallet\n      const accounts = await ethereum.request({method: 'eth_accounts'});\n  \n      if(accounts.length !== 0) {\n        const account = accounts[0];\n        console.log('Auth account available: ', account);\n        // Set the curretn account\n        setCurrentAccount(account);\n        getAllGoofs();\n      } else {\n        console.log('No authorized account avaiable.');\n      }\n\n\n    } catch (err) {\n      console.log('Error in wallet connection: ', err);\n    }\n\n  };\n\n  // Connect wallet method\n  const connectWallet = async () => {\n    try {\n      const {ethereum} = window;\n\n      if(!ethereum) {\n        alert('Please download MetaMask.');\n        return;\n      }\n\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n\n      console.log('Connected to account: ', accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log('Could not connect to any account.');\n    }\n  };\n\n  const getAllGoofs = async () => {\n    try {\n      const{ethereum} = window;\n      if(ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const goofGateContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        // get current contract info\n        // total goofers\n        const count = await goofGateContract.getTotalGoofs();\n        console.log('The total amount of goofs are...', count.toNumber());\n        setGoofers(count.toNumber());\n\n        // get goofs\n        const goofs = await goofGateContract.getAllGoofs();\n\n        // clean data\n        let cleanGoofs = [];\n        goofs.forEach(goof => {\n          cleanGoofs.push({\n            address: goof.goofer,\n            timestamp: new Date(goof.timestamp * 1000),\n            message: goof.message\n          });\n        });\n        setAllGoofs(cleanGoofs);\n      } else {\n        console.log('No ethereum obj available.');\n      }\n    } catch(err) {\n      console.log('Error getting all goofs: ', err);\n    }\n  };\n\n  const goof = async () => {\n    if(inputValue.length === 0) {\n      console.log('No link or msg given!');\n      return;\n    }\n    console.log('Msg or link:', inputValue);\n\n    try {\n      const {ethereum} = window;\n\n      if(ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const goofGateContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        // WRITING FUNCTION TO BLOCKCHAIN\n        const goofTxn = await goofGateContract.goof(inputValue, { gasLimit: 300000 });\n        console.log('Mining...', goofTxn.hash);\n\n        await goofTxn.wait();\n        console.log('Mined --', goofTxn.hash);\n\n        const count = await goofGateContract.getTotalGoofs();\n        console.log('The total amount of goofs are...', count.toNumber());\n        setGoofers(count.toNumber());\n      } else {\n        console.log('No ethereum object available.');\n      }\n    } catch(err) {\n      console.log('Could not goof: ', err);\n    }\n  };\n\n  useEffect(() => {\n    let goofGateContract;\n  \n    const onNewGoof = (from, timestamp, message) => {\n      console.log('NewGoof', from, timestamp, message);\n      setAllGoofs(prevState => [\n        ...prevState,\n        {\n          address: from,\n          timestamp: new Date(timestamp * 1000),\n          message: message,\n        },\n      ]);\n    };\n  \n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n  \n      goofGateContract = new ethers.Contract(contractAddress, contractABI, signer);\n      goofGateContract.on('NewGoof', onNewGoof);\n    }\n  \n    return () => {\n      if (goofGateContract) {\n        goofGateContract.off('NewGoof', onNewGoof);\n      }\n    };\n  }, []);\n\n\n  const renderNotConnected = () => (\n    <div className='container'>\n      <button className='goofButton connect-wallet-button' onClick={connectWallet}>Connect MetaMask</button>\n    </div>\n  );\n\n  const renderConnected = () => (\n    <div className='connected-container'>\n      <input type='text' placeholder='Give a goofy msg, or gif link!' value={inputValue} onChange={onInputChange}/>\n      <button className='goofButton submit-button' onClick={goof}>GOOF OFF</button>\n\n      <h3 className='subtext'>Goofy Goobers: {goofers}</h3>\n      {allGoofs.map((goof, index) => {\n          return (\n            <div key={index} style={{ backgroundColor: \"OldLace\", marginTop: \"16px\", padding: \"8px\" }}>\n              <div>Address: {goof.address}</div>\n              <div>Time: {goof.timestamp.toString()}</div>\n              <div>Message: {goof.message}</div>\n            </div>)\n        })}\n    </div>\n  );\n\n    // Get Input Change\n    const onInputChange = (event) => {\n      const {value} = event.target;\n      setInputValue(value);\n    };\n\n  // Run our function when the page loads\n  useEffect(() => {\n    checkWalletConnection();\n  },[]);\n  \n  return (\n    <div className='mainContainer'>\n      <div className={currentAccount ? 'authed-container' : 'container'}>\n        <h2 className='header'>\n          <span role='img'>😵‍💫🤌</span> Hey you GOOF!\n        </h2>\n        <p className='bio'>\n        I am jetgoof and own a goofy little puppy, isn't that cool? \n        Connect your Ethereum wallet and show me how goofy you are!\n        </p>\n        {!currentAccount && renderNotConnected()}\n        {currentAccount && renderConnected()}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}